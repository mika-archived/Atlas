service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }

    function isUserAuthenticated(userId) {
      return request.auth.uid == userId;
    }

    // ref: https://qiita.com/sgr-ksmt/items/1a731fdadf06119d35fc
    function matchUserReference(ref, uid) {
      return ref != null && ref == /databases/$(database)/documents/users/$(uid);
    }

    function canReadImage(auth, data) {
      return (data.restrict == "public") // Allow all users to read
       || (data.restrict == "registered" && auth != null && auth.uid != null) // Allow registered users to read
       || (data.restrict == "limited" && auth != null && (matchUserReference(data.user, auth.uid) || auth.uid in data.limited)) // Allow limited users to read
       || (data.restrict == "private" && auth != null && matchUserReference(data.user, auth.uid)); // Allow upload user to read
    }

    match /users {
      match /{userId} {
        allow write: if isUserAuthenticated(userId);
        allow read: if isAuthenticated();
      }
    }

    match /images {
      match /{imageId} {
        allow create: if isAuthenticated() && matchUserReference(request.auth.id, requeat.resource.data.user);
        allow update, delete: if requeat.auth != null && matchUserReference(request.auth.uid, resource.data,user);
        allow read: if canReadImage(request.auth, resource.data);
      }
    }
  }
}